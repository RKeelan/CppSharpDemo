// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------

#include "CppSharpJniRuntime.h"
#include "CppData.h"

extern "C" JNIEXPORT
void JNICALL Java_CppData_createInstanceJni(JNIEnv *env, jobject obj)
{
    CppData* nativeInstance = new CppData();
    CppSharp::Runtime::setNativeInstance(env, obj, nativeInstance);
    CppSharp::Runtime::setOwnsNativeInstance(env, obj, JNI_TRUE);
}

extern "C" JNIEXPORT
void JNICALL Java_CppData_destroyInstanceJni(JNIEnv *env, jobject obj)
{
    CppData* nativeInstance = CppSharp::Runtime::getNativeInstance<CppData>(env, obj);
    if (nativeInstance != nullptr) {
        delete nativeInstance;
        nativeInstance = nullptr;
    }

    CppSharp::Runtime::setNativeInstance(env, obj, nativeInstance);
    CppSharp::Runtime::setOwnsNativeInstance(env, obj, JNI_FALSE);
}

extern "C" JNIEXPORT
jboolean JNICALL Java_CppData_getBoolJni(JNIEnv *env, jobject obj)
{
    CppData* nativeInstance = CppSharp::Runtime::getNativeInstance<CppData>(env, obj);
    return nativeInstance->GetBool();
}

extern "C" JNIEXPORT
void JNICALL Java_CppData_setBoolJni(JNIEnv *env, jobject obj, jboolean value)
{
    CppData* nativeInstance = CppSharp::Runtime::getNativeInstance<CppData>(env, obj);
    nativeInstance->SetBool(value);
}